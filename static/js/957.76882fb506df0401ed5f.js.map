{"version":3,"file":"static/js/957.76882fb506df0401ed5f.js","mappings":"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","sources":["webpack://promotion-web/./node_modules/antd/es/_util/styleChecker.js","webpack://promotion-web/./node_modules/antd/es/_util/hooks/useFlexGapSupport.js","webpack://promotion-web/./node_modules/rc-resize-observer/es/utils/observerUtil.js","webpack://promotion-web/./node_modules/rc-resize-observer/es/SingleObserver/DomWrapper.js","webpack://promotion-web/./node_modules/rc-resize-observer/es/Collection.js","webpack://promotion-web/./node_modules/rc-resize-observer/es/SingleObserver/index.js","webpack://promotion-web/./node_modules/rc-resize-observer/es/index.js","webpack://promotion-web/./node_modules/rc-util/es/hooks/useEvent.js","webpack://promotion-web/./node_modules/rc-util/es/hooks/useLayoutEffect.js","webpack://promotion-web/./node_modules/rc-util/es/hooks/useMergedState.js","webpack://promotion-web/./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","webpack://promotion-web/./node_modules/shallowequal/index.js"],"sourcesContent":["import canUseDom from \"rc-util/es/Dom/canUseDom\";\nimport { isStyleSupport } from \"rc-util/es/Dom/styleChecker\";\nexport var canUseDocElement = function canUseDocElement() {\n  return canUseDom() && window.document.documentElement;\n};\nexport { isStyleSupport };\nvar flexGapSupported;\nexport var detectFlexGapSupported = function detectFlexGapSupported() {\n  if (!canUseDocElement()) {\n    return false;\n  }\n\n  if (flexGapSupported !== undefined) {\n    return flexGapSupported;\n  } // create flex container with row-gap set\n\n\n  var flex = document.createElement('div');\n  flex.style.display = 'flex';\n  flex.style.flexDirection = 'column';\n  flex.style.rowGap = '1px'; // create two, elements inside it\n\n  flex.appendChild(document.createElement('div'));\n  flex.appendChild(document.createElement('div')); // append to the DOM (needed to obtain scrollHeight)\n\n  document.body.appendChild(flex);\n  flexGapSupported = flex.scrollHeight === 1; // flex container should be 1px high from the row-gap\n\n  document.body.removeChild(flex);\n  return flexGapSupported;\n};","import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { detectFlexGapSupported } from '../styleChecker';\nexport default (function () {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      flexible = _React$useState2[0],\n      setFlexible = _React$useState2[1];\n\n  React.useEffect(function () {\n    setFlexible(detectFlexGapSupported());\n  }, []);\n  return flexible;\n});","import ResizeObserver from 'resize-observer-polyfill'; // =============================== Const ===============================\n\nvar elementListeners = new Map();\n\nfunction onResize(entities) {\n  entities.forEach(function (entity) {\n    var _elementListeners$get;\n\n    var target = entity.target;\n    (_elementListeners$get = elementListeners.get(target)) === null || _elementListeners$get === void 0 ? void 0 : _elementListeners$get.forEach(function (listener) {\n      return listener(target);\n    });\n  });\n} // Note: ResizeObserver polyfill not support option to measure border-box resize\n\n\nvar resizeObserver = new ResizeObserver(onResize); // Dev env only\n\nexport var _el = process.env.NODE_ENV !== 'production' ? elementListeners : null; // eslint-disable-line\n\nexport var _rs = process.env.NODE_ENV !== 'production' ? onResize : null; // eslint-disable-line\n// ============================== Observe ==============================\n\nexport function observe(element, callback) {\n  if (!elementListeners.has(element)) {\n    elementListeners.set(element, new Set());\n    resizeObserver.observe(element);\n  }\n\n  elementListeners.get(element).add(callback);\n}\nexport function unobserve(element, callback) {\n  if (elementListeners.has(element)) {\n    elementListeners.get(element).delete(callback);\n\n    if (!elementListeners.get(element).size) {\n      resizeObserver.unobserve(element);\n      elementListeners.delete(element);\n    }\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport * as React from 'react';\n/**\n * Fallback to findDOMNode if origin ref do not provide any dom element\n */\n\nvar DomWrapper = /*#__PURE__*/function (_React$Component) {\n  _inherits(DomWrapper, _React$Component);\n\n  var _super = _createSuper(DomWrapper);\n\n  function DomWrapper() {\n    _classCallCheck(this, DomWrapper);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DomWrapper, [{\n    key: \"render\",\n    value: function render() {\n      return this.props.children;\n    }\n  }]);\n\n  return DomWrapper;\n}(React.Component);\n\nexport { DomWrapper as default };","import * as React from 'react';\nexport var CollectionContext = /*#__PURE__*/React.createContext(null);\n/**\n * Collect all the resize event from children ResizeObserver\n */\n\nexport function Collection(_ref) {\n  var children = _ref.children,\n      onBatchResize = _ref.onBatchResize;\n  var resizeIdRef = React.useRef(0);\n  var resizeInfosRef = React.useRef([]);\n  var onCollectionResize = React.useContext(CollectionContext);\n  var onResize = React.useCallback(function (size, element, data) {\n    resizeIdRef.current += 1;\n    var currentId = resizeIdRef.current;\n    resizeInfosRef.current.push({\n      size: size,\n      element: element,\n      data: data\n    });\n    Promise.resolve().then(function () {\n      if (currentId === resizeIdRef.current) {\n        onBatchResize === null || onBatchResize === void 0 ? void 0 : onBatchResize(resizeInfosRef.current);\n        resizeInfosRef.current = [];\n      }\n    }); // Continue bubbling if parent exist\n\n    onCollectionResize === null || onCollectionResize === void 0 ? void 0 : onCollectionResize(size, element, data);\n  }, [onBatchResize, onCollectionResize]);\n  return /*#__PURE__*/React.createElement(CollectionContext.Provider, {\n    value: onResize\n  }, children);\n}","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { composeRef, supportRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport findDOMNode from \"rc-util/es/Dom/findDOMNode\";\nimport { observe, unobserve } from '../utils/observerUtil';\nimport DomWrapper from './DomWrapper';\nimport { CollectionContext } from '../Collection';\nexport default function SingleObserver(props) {\n  var children = props.children,\n      disabled = props.disabled;\n  var elementRef = React.useRef(null);\n  var wrapperRef = React.useRef(null);\n  var onCollectionResize = React.useContext(CollectionContext); // =========================== Children ===========================\n\n  var isRenderProps = typeof children === 'function';\n  var mergedChildren = isRenderProps ? children(elementRef) : children; // ============================= Size =============================\n\n  var sizeRef = React.useRef({\n    width: -1,\n    height: -1,\n    offsetWidth: -1,\n    offsetHeight: -1\n  }); // ============================= Ref ==============================\n\n  var canRef = !isRenderProps && /*#__PURE__*/React.isValidElement(mergedChildren) && supportRef(mergedChildren);\n  var originRef = canRef ? mergedChildren.ref : null;\n  var mergedRef = React.useMemo(function () {\n    return composeRef(originRef, elementRef);\n  }, [originRef, elementRef]); // =========================== Observe ============================\n\n  var propsRef = React.useRef(props);\n  propsRef.current = props; // Handler\n\n  var onInternalResize = React.useCallback(function (target) {\n    var _propsRef$current = propsRef.current,\n        onResize = _propsRef$current.onResize,\n        data = _propsRef$current.data;\n\n    var _target$getBoundingCl = target.getBoundingClientRect(),\n        width = _target$getBoundingCl.width,\n        height = _target$getBoundingCl.height;\n\n    var offsetWidth = target.offsetWidth,\n        offsetHeight = target.offsetHeight;\n    /**\n     * Resize observer trigger when content size changed.\n     * In most case we just care about element size,\n     * let's use `boundary` instead of `contentRect` here to avoid shaking.\n     */\n\n    var fixedWidth = Math.floor(width);\n    var fixedHeight = Math.floor(height);\n\n    if (sizeRef.current.width !== fixedWidth || sizeRef.current.height !== fixedHeight || sizeRef.current.offsetWidth !== offsetWidth || sizeRef.current.offsetHeight !== offsetHeight) {\n      var size = {\n        width: fixedWidth,\n        height: fixedHeight,\n        offsetWidth: offsetWidth,\n        offsetHeight: offsetHeight\n      };\n      sizeRef.current = size; // IE is strange, right?\n\n      var mergedOffsetWidth = offsetWidth === Math.round(width) ? width : offsetWidth;\n      var mergedOffsetHeight = offsetHeight === Math.round(height) ? height : offsetHeight;\n\n      var sizeInfo = _objectSpread(_objectSpread({}, size), {}, {\n        offsetWidth: mergedOffsetWidth,\n        offsetHeight: mergedOffsetHeight\n      }); // Let collection know what happened\n\n\n      onCollectionResize === null || onCollectionResize === void 0 ? void 0 : onCollectionResize(sizeInfo, target, data);\n\n      if (onResize) {\n        // defer the callback but not defer to next frame\n        Promise.resolve().then(function () {\n          onResize(sizeInfo, target);\n        });\n      }\n    }\n  }, []); // Dynamic observe\n\n  React.useEffect(function () {\n    var currentElement = findDOMNode(elementRef.current) || findDOMNode(wrapperRef.current);\n\n    if (currentElement && !disabled) {\n      observe(currentElement, onInternalResize);\n    }\n\n    return function () {\n      return unobserve(currentElement, onInternalResize);\n    };\n  }, [elementRef.current, disabled]); // ============================ Render ============================\n\n  return /*#__PURE__*/React.createElement(DomWrapper, {\n    ref: wrapperRef\n  }, canRef ? /*#__PURE__*/React.cloneElement(mergedChildren, {\n    ref: mergedRef\n  }) : mergedChildren);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport { warning } from \"rc-util/es/warning\";\nimport SingleObserver from './SingleObserver';\nimport { Collection } from './Collection';\nvar INTERNAL_PREFIX_KEY = 'rc-observer-key';\n\nfunction ResizeObserver(props) {\n  var children = props.children;\n  var childNodes = typeof children === 'function' ? [children] : toArray(children);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (childNodes.length > 1) {\n      warning(false, 'Find more than one child node with `children` in ResizeObserver. Please use ResizeObserver.Collection instead.');\n    } else if (childNodes.length === 0) {\n      warning(false, '`children` of ResizeObserver is empty. Nothing is in observe.');\n    }\n  }\n\n  return childNodes.map(function (child, index) {\n    var key = (child === null || child === void 0 ? void 0 : child.key) || \"\".concat(INTERNAL_PREFIX_KEY, \"-\").concat(index);\n    return /*#__PURE__*/React.createElement(SingleObserver, _extends({}, props, {\n      key: key\n    }), child);\n  });\n}\n\nResizeObserver.Collection = Collection;\nexport default ResizeObserver;","import * as React from 'react';\nexport default function useEvent(callback) {\n  var fnRef = React.useRef();\n  fnRef.current = callback;\n  var memoFn = React.useCallback(function () {\n    var _fnRef$current;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return (_fnRef$current = fnRef.current) === null || _fnRef$current === void 0 ? void 0 : _fnRef$current.call.apply(_fnRef$current, [fnRef].concat(args));\n  }, []);\n  return memoFn;\n}","import * as React from 'react';\nimport canUseDom from '../Dom/canUseDom';\n/**\n * Wrap `React.useLayoutEffect` which will not throw warning message in test env\n */\n\nvar useLayoutEffect = process.env.NODE_ENV !== 'test' && canUseDom() ? React.useLayoutEffect : React.useEffect;\nexport default useLayoutEffect;\nexport var useLayoutUpdateEffect = function useLayoutUpdateEffect(callback, deps) {\n  var firstMountRef = React.useRef(true);\n  useLayoutEffect(function () {\n    if (!firstMountRef.current) {\n      return callback();\n    }\n  }, deps); // We tell react that first mount has passed\n\n  useLayoutEffect(function () {\n    firstMountRef.current = false;\n    return function () {\n      firstMountRef.current = true;\n    };\n  }, []);\n};","import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport useEvent from './useEvent';\nimport useLayoutEffect, { useLayoutUpdateEffect } from './useLayoutEffect';\nimport useState from './useState';\nvar Source;\n\n(function (Source) {\n  Source[Source[\"INNER\"] = 0] = \"INNER\";\n  Source[Source[\"PROP\"] = 1] = \"PROP\";\n})(Source || (Source = {}));\n/** We only think `undefined` is empty */\n\n\nfunction hasValue(value) {\n  return value !== undefined;\n}\n/**\n * Similar to `useState` but will use props value if provided.\n * Note that internal use rc-util `useState` hook.\n */\n\n\nexport default function useMergedState(defaultStateValue, option) {\n  var _ref = option || {},\n      defaultValue = _ref.defaultValue,\n      value = _ref.value,\n      onChange = _ref.onChange,\n      postState = _ref.postState; // ======================= Init =======================\n\n\n  var _useState = useState(function () {\n    var finalValue = undefined;\n    var source;\n\n    if (hasValue(value)) {\n      finalValue = value;\n      source = Source.PROP;\n    } else if (hasValue(defaultValue)) {\n      finalValue = typeof defaultValue === 'function' ? defaultValue() : defaultValue;\n      source = Source.PROP;\n    } else {\n      finalValue = typeof defaultStateValue === 'function' ? defaultStateValue() : defaultStateValue;\n      source = Source.INNER;\n    }\n\n    return [finalValue, source, finalValue];\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      mergedValue = _useState2[0],\n      setMergedValue = _useState2[1];\n\n  var chosenValue = hasValue(value) ? value : mergedValue[0];\n  var postMergedValue = postState ? postState(chosenValue) : chosenValue; // ======================= Sync =======================\n\n  useLayoutUpdateEffect(function () {\n    setMergedValue(function (_ref2) {\n      var _ref3 = _slicedToArray(_ref2, 1),\n          prevValue = _ref3[0];\n\n      return [value, Source.PROP, prevValue];\n    });\n  }, [value]); // ====================== Update ======================\n\n  var changeEventPrevRef = React.useRef();\n  var triggerChange = useEvent(function (updater, ignoreDestroy) {\n    setMergedValue(function (prev) {\n      var _prev = _slicedToArray(prev, 3),\n          prevValue = _prev[0],\n          prevSource = _prev[1],\n          prevPrevValue = _prev[2];\n\n      var nextValue = typeof updater === 'function' ? updater(prevValue) : updater; // Do nothing if value not change\n\n      if (nextValue === prevValue) {\n        return prev;\n      } // Use prev prev value if is in a batch update to avoid missing data\n\n\n      var overridePrevValue = prevSource === Source.INNER && changeEventPrevRef.current !== prevPrevValue ? prevPrevValue : prevValue;\n      return [nextValue, Source.INNER, overridePrevValue];\n    }, ignoreDestroy);\n  }); // ====================== Change ======================\n\n  var onChangeFn = useEvent(onChange);\n  useLayoutEffect(function () {\n    var _mergedValue = _slicedToArray(mergedValue, 3),\n        current = _mergedValue[0],\n        source = _mergedValue[1],\n        prev = _mergedValue[2];\n\n    if (current !== prev && source === Source.INNER) {\n      onChangeFn(current, prev);\n      changeEventPrevRef.current = prev;\n    }\n  }, [mergedValue]);\n  return [postMergedValue, triggerChange];\n}","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nexport default index;\n","//\n\nmodule.exports = function shallowEqual(objA, objB, compare, compareContext) {\n  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n\n  if (ret !== void 0) {\n    return !!ret;\n  }\n\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== \"object\" || !objA || typeof objB !== \"object\" || !objB) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n\n  // Test for A's keys different from B.\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key)) {\n      return false;\n    }\n\n    var valueA = objA[key];\n    var valueB = objB[key];\n\n    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n\n    if (ret === false || (ret === void 0 && valueA !== valueB)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n"],"names":["flexGapSupported","detectFlexGapSupported","canUseDom","window","document","documentElement","undefined","flex","createElement","style","display","flexDirection","rowGap","appendChild","body","scrollHeight","removeChild","_React$useState","_React$useState2","flexible","setFlexible","elementListeners","Map","resizeObserver","entities","forEach","entity","_elementListeners$get","target","get","listener","DomWrapper","_React$Component","_super","this","apply","arguments","key","value","props","children","CollectionContext","SingleObserver","disabled","elementRef","wrapperRef","onCollectionResize","isRenderProps","mergedChildren","sizeRef","width","height","offsetWidth","offsetHeight","canRef","originRef","ref","mergedRef","propsRef","current","onInternalResize","_propsRef$current","onResize","data","_target$getBoundingCl","getBoundingClientRect","fixedWidth","Math","floor","fixedHeight","size","mergedOffsetWidth","round","mergedOffsetHeight","sizeInfo","Promise","resolve","then","element","callback","currentElement","findDOMNode","has","set","Set","observe","add","delete","unobserve","ResizeObserver","toArray","map","child","index","concat","Collection","_ref","onBatchResize","resizeIdRef","resizeInfosRef","currentId","push","Provider","useEvent","fnRef","memoFn","_fnRef$current","_len","length","args","Array","_key","call","useLayoutEffect","useLayoutUpdateEffect","deps","firstMountRef","Source","hasValue","useMergedState","defaultStateValue","option","defaultValue","onChange","postState","_useState","source","finalValue","PROP","INNER","_useState2","mergedValue","setMergedValue","chosenValue","postMergedValue","_ref2","prevValue","changeEventPrevRef","triggerChange","updater","ignoreDestroy","prev","_prev","prevSource","prevPrevValue","nextValue","overridePrevValue","onChangeFn","_mergedValue","MapShim","getIndex","arr","result","some","entry","class_1","__entries__","Object","defineProperty","prototype","enumerable","configurable","entries","splice","clear","ctx","_i","_a","isBrowser","global$1","g","self","Function","requestAnimationFrame$1","requestAnimationFrame","bind","setTimeout","Date","now","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","observer","indexOf","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","addEventListener","attributes","childList","characterData","subtree","removeEventListener","disconnect","_b","propertyName","getInstance","instance_","defineConfigurable","keys","writable","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","reduce","position","getHTMLElementContentRect","clientWidth","clientHeight","getComputedStyle","paddings","positions_1","getPaddings","horizPad","left","right","vertPad","top","bottom","boxSizing","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","x","y","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","rect","broadcastRect","ResizeObserverEntry","rectInit","Constr","contentRect","DOMRectReadOnly","create","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","Element","observations","clearActive","_this","observation","WeakMap","method","module","exports","objA","objB","compare","compareContext","ret","keysA","keysB","bHasOwnProperty","hasOwnProperty","idx","valueA","valueB"],"sourceRoot":""}