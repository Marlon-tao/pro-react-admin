{"version":3,"file":"static/js/957.2c032f3a4e6e78ceb080.js","mappings":"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","sources":["webpack://promotion-web/./node_modules/antd/es/_util/styleChecker.js","webpack://promotion-web/./node_modules/antd/es/_util/hooks/useFlexGapSupport.js","webpack://promotion-web/./node_modules/rc-resize-observer/es/utils/observerUtil.js","webpack://promotion-web/./node_modules/rc-resize-observer/es/SingleObserver/DomWrapper.js","webpack://promotion-web/./node_modules/rc-resize-observer/es/Collection.js","webpack://promotion-web/./node_modules/rc-resize-observer/es/SingleObserver/index.js","webpack://promotion-web/./node_modules/rc-resize-observer/es/index.js","webpack://promotion-web/./node_modules/rc-util/es/hooks/useMergedState.js","webpack://promotion-web/./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","webpack://promotion-web/./node_modules/shallowequal/index.js"],"sourcesContent":["import canUseDom from \"rc-util/es/Dom/canUseDom\";\nimport { isStyleSupport } from \"rc-util/es/Dom/styleChecker\";\nexport var canUseDocElement = function canUseDocElement() {\n  return canUseDom() && window.document.documentElement;\n};\nexport { isStyleSupport };\nvar flexGapSupported;\nexport var detectFlexGapSupported = function detectFlexGapSupported() {\n  if (!canUseDocElement()) {\n    return false;\n  }\n\n  if (flexGapSupported !== undefined) {\n    return flexGapSupported;\n  } // create flex container with row-gap set\n\n\n  var flex = document.createElement('div');\n  flex.style.display = 'flex';\n  flex.style.flexDirection = 'column';\n  flex.style.rowGap = '1px'; // create two, elements inside it\n\n  flex.appendChild(document.createElement('div'));\n  flex.appendChild(document.createElement('div')); // append to the DOM (needed to obtain scrollHeight)\n\n  document.body.appendChild(flex);\n  flexGapSupported = flex.scrollHeight === 1; // flex container should be 1px high from the row-gap\n\n  document.body.removeChild(flex);\n  return flexGapSupported;\n};","import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { detectFlexGapSupported } from '../styleChecker';\nexport default (function () {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      flexible = _React$useState2[0],\n      setFlexible = _React$useState2[1];\n\n  React.useEffect(function () {\n    setFlexible(detectFlexGapSupported());\n  }, []);\n  return flexible;\n});","import ResizeObserver from 'resize-observer-polyfill'; // =============================== Const ===============================\n\nvar elementListeners = new Map();\n\nfunction onResize(entities) {\n  entities.forEach(function (entity) {\n    var _elementListeners$get;\n\n    var target = entity.target;\n    (_elementListeners$get = elementListeners.get(target)) === null || _elementListeners$get === void 0 ? void 0 : _elementListeners$get.forEach(function (listener) {\n      return listener(target);\n    });\n  });\n} // Note: ResizeObserver polyfill not support option to measure border-box resize\n\n\nvar resizeObserver = new ResizeObserver(onResize); // Dev env only\n\nexport var _el = process.env.NODE_ENV !== 'production' ? elementListeners : null; // eslint-disable-line\n\nexport var _rs = process.env.NODE_ENV !== 'production' ? onResize : null; // eslint-disable-line\n// ============================== Observe ==============================\n\nexport function observe(element, callback) {\n  if (!elementListeners.has(element)) {\n    elementListeners.set(element, new Set());\n    resizeObserver.observe(element);\n  }\n\n  elementListeners.get(element).add(callback);\n}\nexport function unobserve(element, callback) {\n  if (elementListeners.has(element)) {\n    elementListeners.get(element).delete(callback);\n\n    if (!elementListeners.get(element).size) {\n      resizeObserver.unobserve(element);\n      elementListeners.delete(element);\n    }\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport * as React from 'react';\n/**\n * Fallback to findDOMNode if origin ref do not provide any dom element\n */\n\nvar DomWrapper = /*#__PURE__*/function (_React$Component) {\n  _inherits(DomWrapper, _React$Component);\n\n  var _super = _createSuper(DomWrapper);\n\n  function DomWrapper() {\n    _classCallCheck(this, DomWrapper);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DomWrapper, [{\n    key: \"render\",\n    value: function render() {\n      return this.props.children;\n    }\n  }]);\n\n  return DomWrapper;\n}(React.Component);\n\nexport { DomWrapper as default };","import * as React from 'react';\nexport var CollectionContext = /*#__PURE__*/React.createContext(null);\n/**\n * Collect all the resize event from children ResizeObserver\n */\n\nexport function Collection(_ref) {\n  var children = _ref.children,\n      onBatchResize = _ref.onBatchResize;\n  var resizeIdRef = React.useRef(0);\n  var resizeInfosRef = React.useRef([]);\n  var onCollectionResize = React.useContext(CollectionContext);\n  var onResize = React.useCallback(function (size, element, data) {\n    resizeIdRef.current += 1;\n    var currentId = resizeIdRef.current;\n    resizeInfosRef.current.push({\n      size: size,\n      element: element,\n      data: data\n    });\n    Promise.resolve().then(function () {\n      if (currentId === resizeIdRef.current) {\n        onBatchResize === null || onBatchResize === void 0 ? void 0 : onBatchResize(resizeInfosRef.current);\n        resizeInfosRef.current = [];\n      }\n    }); // Continue bubbling if parent exist\n\n    onCollectionResize === null || onCollectionResize === void 0 ? void 0 : onCollectionResize(size, element, data);\n  }, [onBatchResize, onCollectionResize]);\n  return /*#__PURE__*/React.createElement(CollectionContext.Provider, {\n    value: onResize\n  }, children);\n}","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { composeRef, supportRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport findDOMNode from \"rc-util/es/Dom/findDOMNode\";\nimport { observe, unobserve } from '../utils/observerUtil';\nimport DomWrapper from './DomWrapper';\nimport { CollectionContext } from '../Collection';\nexport default function SingleObserver(props) {\n  var children = props.children,\n      disabled = props.disabled;\n  var elementRef = React.useRef(null);\n  var wrapperRef = React.useRef(null);\n  var onCollectionResize = React.useContext(CollectionContext); // =========================== Children ===========================\n\n  var isRenderProps = typeof children === 'function';\n  var mergedChildren = isRenderProps ? children(elementRef) : children; // ============================= Size =============================\n\n  var sizeRef = React.useRef({\n    width: -1,\n    height: -1,\n    offsetWidth: -1,\n    offsetHeight: -1\n  }); // ============================= Ref ==============================\n\n  var canRef = !isRenderProps && /*#__PURE__*/React.isValidElement(mergedChildren) && supportRef(mergedChildren);\n  var originRef = canRef ? mergedChildren.ref : null;\n  var mergedRef = React.useMemo(function () {\n    return composeRef(originRef, elementRef);\n  }, [originRef, elementRef]); // =========================== Observe ============================\n\n  var propsRef = React.useRef(props);\n  propsRef.current = props; // Handler\n\n  var onInternalResize = React.useCallback(function (target) {\n    var _propsRef$current = propsRef.current,\n        onResize = _propsRef$current.onResize,\n        data = _propsRef$current.data;\n\n    var _target$getBoundingCl = target.getBoundingClientRect(),\n        width = _target$getBoundingCl.width,\n        height = _target$getBoundingCl.height;\n\n    var offsetWidth = target.offsetWidth,\n        offsetHeight = target.offsetHeight;\n    /**\n     * Resize observer trigger when content size changed.\n     * In most case we just care about element size,\n     * let's use `boundary` instead of `contentRect` here to avoid shaking.\n     */\n\n    var fixedWidth = Math.floor(width);\n    var fixedHeight = Math.floor(height);\n\n    if (sizeRef.current.width !== fixedWidth || sizeRef.current.height !== fixedHeight || sizeRef.current.offsetWidth !== offsetWidth || sizeRef.current.offsetHeight !== offsetHeight) {\n      var size = {\n        width: fixedWidth,\n        height: fixedHeight,\n        offsetWidth: offsetWidth,\n        offsetHeight: offsetHeight\n      };\n      sizeRef.current = size; // IE is strange, right?\n\n      var mergedOffsetWidth = offsetWidth === Math.round(width) ? width : offsetWidth;\n      var mergedOffsetHeight = offsetHeight === Math.round(height) ? height : offsetHeight;\n\n      var sizeInfo = _objectSpread(_objectSpread({}, size), {}, {\n        offsetWidth: mergedOffsetWidth,\n        offsetHeight: mergedOffsetHeight\n      }); // Let collection know what happened\n\n\n      onCollectionResize === null || onCollectionResize === void 0 ? void 0 : onCollectionResize(sizeInfo, target, data);\n\n      if (onResize) {\n        // defer the callback but not defer to next frame\n        Promise.resolve().then(function () {\n          onResize(sizeInfo, target);\n        });\n      }\n    }\n  }, []); // Dynamic observe\n\n  React.useEffect(function () {\n    var currentElement = findDOMNode(elementRef.current) || findDOMNode(wrapperRef.current);\n\n    if (currentElement && !disabled) {\n      observe(currentElement, onInternalResize);\n    }\n\n    return function () {\n      return unobserve(currentElement, onInternalResize);\n    };\n  }, [elementRef.current, disabled]); // ============================ Render ============================\n\n  return /*#__PURE__*/React.createElement(DomWrapper, {\n    ref: wrapperRef\n  }, canRef ? /*#__PURE__*/React.cloneElement(mergedChildren, {\n    ref: mergedRef\n  }) : mergedChildren);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport { warning } from \"rc-util/es/warning\";\nimport SingleObserver from './SingleObserver';\nimport { Collection } from './Collection';\nvar INTERNAL_PREFIX_KEY = 'rc-observer-key';\n\nfunction ResizeObserver(props) {\n  var children = props.children;\n  var childNodes = typeof children === 'function' ? [children] : toArray(children);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (childNodes.length > 1) {\n      warning(false, 'Find more than one child node with `children` in ResizeObserver. Please use ResizeObserver.Collection instead.');\n    } else if (childNodes.length === 0) {\n      warning(false, '`children` of ResizeObserver is empty. Nothing is in observe.');\n    }\n  }\n\n  return childNodes.map(function (child, index) {\n    var key = (child === null || child === void 0 ? void 0 : child.key) || \"\".concat(INTERNAL_PREFIX_KEY, \"-\").concat(index);\n    return /*#__PURE__*/React.createElement(SingleObserver, _extends({}, props, {\n      key: key\n    }), child);\n  });\n}\n\nResizeObserver.Collection = Collection;\nexport default ResizeObserver;","import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport useState from './useState';\n/**\n * Similar to `useState` but will use props value if provided.\n * Note that internal use rc-util `useState` hook.\n */\n\nexport default function useMergedState(defaultStateValue, option) {\n  var _ref = option || {},\n      defaultValue = _ref.defaultValue,\n      value = _ref.value,\n      onChange = _ref.onChange,\n      postState = _ref.postState;\n\n  var _useState = useState(function () {\n    if (value !== undefined) {\n      return value;\n    }\n\n    if (defaultValue !== undefined) {\n      return typeof defaultValue === 'function' ? defaultValue() : defaultValue;\n    }\n\n    return typeof defaultStateValue === 'function' ? defaultStateValue() : defaultStateValue;\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      innerValue = _useState2[0],\n      setInnerValue = _useState2[1];\n\n  var mergedValue = value !== undefined ? value : innerValue;\n\n  if (postState) {\n    mergedValue = postState(mergedValue);\n  } // setState\n\n\n  var onChangeRef = React.useRef(onChange);\n  onChangeRef.current = onChange;\n  var triggerChange = React.useCallback(function (newValue, ignoreDestroy) {\n    setInnerValue(newValue, ignoreDestroy);\n\n    if (mergedValue !== newValue && onChangeRef.current) {\n      onChangeRef.current(newValue, mergedValue);\n    }\n  }, [mergedValue, onChangeRef]); // Effect of reset value to `undefined`\n\n  var prevValueRef = React.useRef(value);\n  React.useEffect(function () {\n    if (value === undefined && value !== prevValueRef.current) {\n      setInnerValue(value);\n    }\n\n    prevValueRef.current = value;\n  }, [value]);\n  return [mergedValue, triggerChange];\n}","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nexport default index;\n","//\n\nmodule.exports = function shallowEqual(objA, objB, compare, compareContext) {\n  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n\n  if (ret !== void 0) {\n    return !!ret;\n  }\n\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== \"object\" || !objA || typeof objB !== \"object\" || !objB) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n\n  // Test for A's keys different from B.\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key)) {\n      return false;\n    }\n\n    var valueA = objA[key];\n    var valueB = objB[key];\n\n    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n\n    if (ret === false || (ret === void 0 && valueA !== valueB)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n"],"names":["flexGapSupported","detectFlexGapSupported","canUseDom","window","document","documentElement","undefined","flex","createElement","style","display","flexDirection","rowGap","appendChild","body","scrollHeight","removeChild","_React$useState","_React$useState2","flexible","setFlexible","elementListeners","Map","resizeObserver","entities","forEach","entity","_elementListeners$get","target","get","listener","DomWrapper","_React$Component","_super","this","apply","arguments","key","value","props","children","CollectionContext","SingleObserver","disabled","elementRef","wrapperRef","onCollectionResize","isRenderProps","mergedChildren","sizeRef","width","height","offsetWidth","offsetHeight","canRef","originRef","ref","mergedRef","propsRef","current","onInternalResize","_propsRef$current","onResize","data","_target$getBoundingCl","getBoundingClientRect","fixedWidth","Math","floor","fixedHeight","size","mergedOffsetWidth","round","mergedOffsetHeight","sizeInfo","Promise","resolve","then","element","callback","currentElement","findDOMNode","has","set","Set","observe","add","delete","unobserve","ResizeObserver","toArray","map","child","index","concat","Collection","_ref","onBatchResize","resizeIdRef","resizeInfosRef","currentId","push","Provider","useMergedState","defaultStateValue","option","defaultValue","onChange","postState","_useState","_useState2","innerValue","setInnerValue","mergedValue","onChangeRef","triggerChange","newValue","ignoreDestroy","prevValueRef","MapShim","getIndex","arr","result","some","entry","class_1","__entries__","Object","defineProperty","prototype","length","enumerable","configurable","entries","splice","clear","ctx","_i","_a","call","isBrowser","global$1","g","self","Function","requestAnimationFrame$1","requestAnimationFrame","bind","setTimeout","Date","now","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","observer","indexOf","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","addEventListener","attributes","childList","characterData","subtree","removeEventListener","disconnect","_b","propertyName","getInstance","instance_","defineConfigurable","keys","writable","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","reduce","position","getHTMLElementContentRect","clientWidth","clientHeight","getComputedStyle","paddings","positions_1","getPaddings","horizPad","left","right","vertPad","top","bottom","boxSizing","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","x","y","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","rect","broadcastRect","ResizeObserverEntry","rectInit","Constr","contentRect","DOMRectReadOnly","create","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","Element","observations","clearActive","_this","observation","WeakMap","method","module","exports","objA","objB","compare","compareContext","ret","keysA","keysB","bHasOwnProperty","hasOwnProperty","idx","valueA","valueB"],"sourceRoot":""}